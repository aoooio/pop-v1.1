# Variables à définir au niveau du projet Gitlab, avec l'option "masquée" :
# - AWS_ACCESS_KEY_ID_OPEN      : Identifiant AWS pour les environnements Open
# - AWS_SECRET_ACCESS_KEY_OPEN  : Clé AWS pour les environnements Open
# - AWS_ACCESS_KEY_ID_MC        : Identifiant AWS pour les environnements du Ministère de la Culture
# - AWS_SECRET_ACCESS_KEY_MC    : Clé AWS pour les environnements du Ministère de la Culture
#
default:
  image: node:14.17

include:
  - project: "boost/template-ci/pipelines/common"
    file: 
      - "sonar/sonar.yml"
  - local: "./gitlab-ci-template.yml"

stages:
  - node-modules
  - test
  - sast
  - quality
#  - sast
#  - build
#  - deploy
#  - staging
#  - production

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'
    - if: '$CI_COMMIT_TAG'


##############################################################
# TEMPLATES
#

.install-awsebcli: &install-awsebcli
  - pip install awsebcli

.aws-open-credentials: &aws-open-credentials
  - mkdir ~/.aws
  - echo "[eb-cli]" > ~/.aws/credentials
  - echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_OPEN}" >> ~/.aws/credentials
  - echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_OPEN}" >> ~/.aws/credentials

.aws-mc-credentials: &aws-mc-credentials
  - mkdir ~/.aws
  - echo "[default]" > ~/.aws/credentials
  - echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_MC}" >> ~/.aws/credentials
  - echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_MC}" >> ~/.aws/credentials

# Variables à utiliser avec ce template :
#   - APP : Nom du module applicatif à compiler (api, diffusion, consultation).
#   - ENV : Nom de l'environnement AWS cible.
#   - NAME: Nom de l'application (présent dans le fichier .elasticbeanstalk/config.yml)
#   - REPLACE: Nom de l'application cible AWS
#
.deploy-open: &deploy-open
  stage: deploy
  image: python:3.9
  script:
    - *install-awsebcli
    - *aws-open-credentials
    - cd apps/${APP}
    - sed -i "s/${NAME}/${REPLACE}/" .elasticbeanstalk/config.yml
    - eb deploy ${ENV}

# Variables à utiliser avec ce template :
#   - APP : Nom du module applicatif à compiler (api, diffusion, consultation).
#   - ENV : Nom de l'environnement AWS cible.
#
.deploy-mc: &deploy-mc
  stage: deploy
  image: python:3.9
  script:
    - *install-awsebcli
    - *aws-mc-credentials
    - cd apps/${APP}
    - eb deploy ${ENV}

##############################################################
# NODE-MODULES
#
# Variables à utiliser avec ce template :
#   - APP : Nom du module applicatif à compiler (api, diffusion, consultation).
node-modules-api:
  <<: *node-modules
  variables:
    APP: api

node-modules-production:
  <<: *node-modules
  variables:
    APP: production

node-modules-diffusion:
  <<: *node-modules
  variables:
    APP: diffusion

##############################################################
# TEST
#
# Variables à utiliser avec ce template :
#   - APP : Nom du module applicatif à compiler (api, diffusion, consultation).
test-api:
  needs:
    - node-modules-api
  <<: *test
  services:
    - mongo:4.4
  variables:
    APP: api
    DB_ENDPOINT: mongodb://mongo:27017/pop

test-production:
  needs:
    - node-modules-production
  <<: *test
  variables:
    APP: production

test-diffusion:
  needs:
    - node-modules-diffusion
  <<: *test
  variables:
    APP: diffusion

##############################################################
# SAST
#
audit-api:
  <<: *audit
  variables:
    APP: api

audit-diffusion:
  <<: *audit
  variables:
    APP: diffusion

audit-production:
  <<: *audit
  variables:
    APP: production

##############################################################
# SONAR
#
# Variables à utiliser avec ce template :
#   - APP : Nom du module applicatif à compiler (api, diffusion, consultation).
# SONAR_KEY=mc.pop.
sonar-api:
  extends: [".sonar-pop"]
  variables:
    CI_PROJECT_NAME: ${CI_PROJECT_NAME}.api
    SONAR_OPTIONS: "-Dsonar.projectBaseDir=apps/api"

